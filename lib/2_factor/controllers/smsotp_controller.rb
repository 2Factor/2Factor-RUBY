# This file was automatically generated for 2Factor by APIMATIC BETA v2.0 on 02/18/2016

module M2Factor
  class SMSOTPController

    # This endpoint is used to check SMS OTP balance
    # @param [String] api_key Required parameter: API Obtained From 2Factor.in
    # @return CheckSmsBalanceModel response from the API call
    def get_check_sms_balance api_key
      # the base uri for api requests
      query_builder = Configuration.BASE_URI.dup

      # prepare query string for API call
      query_builder << "/API/V1/{api_key}/BAL/SMS"

      # process optional query parameters
      query_builder = APIHelper.append_url_with_template_parameters query_builder, {
        "api_key" => api_key,
      }

      # validate and preprocess url
      query_url = APIHelper.clean_url query_builder

      # prepare headers
      headers = {
        "user-agent" => "2Factor",
        "accept" => "application/json"
      }

      # invoke the API call request to fetch the response
      response = Unirest.get query_url, headers:headers

      #Error handling using HTTP status codes
      if !(response.code.between?(200,206)) # [200,206] = HTTP OK
        raise APIException.new "HTTP Response Not OK", response.code, response.raw_body
      end

      response.body
    end

    # This endpoint is used to send Auto Generated SMS OTP to India
    # @param [String] api_key Required parameter: API Obtained From 2Factor.in
    # @param [String] phone_number Required parameter: 10 Digit Indian Phone Number
    # @return SendingSmsOtpAutoGeneratedOtpModel response from the API call
    def get_sending_sms_otp_auto_generated_otp api_key, phone_number
      # the base uri for api requests
      query_builder = Configuration.BASE_URI.dup

      # prepare query string for API call
      query_builder << "/API/V1/{api_key}/SMS/{phone_number}/AUTOGEN"

      # process optional query parameters
      query_builder = APIHelper.append_url_with_template_parameters query_builder, {
        "api_key" => api_key,
        "phone_number" => phone_number,
      }

      # validate and preprocess url
      query_url = APIHelper.clean_url query_builder

      # prepare headers
      headers = {
        "user-agent" => "2Factor",
        "accept" => "application/json"
      }

      # invoke the API call request to fetch the response
      response = Unirest.get query_url, headers:headers

      #Error handling using HTTP status codes
      if !(response.code.between?(200,206)) # [200,206] = HTTP OK
        raise APIException.new "HTTP Response Not OK", response.code, response.raw_body
      end

      response.body
    end

    # This endpoint is used to send Custom SMS OTP to India
    # @param [String] api_key Required parameter: API Obtained From 2Factor.in
    # @param [String] otp Required parameter: 4-6 Digit ( Numeric ) OTP code to be sent
    # @param [String] phone_number Required parameter: 10 Digit Indian Phone Number
    # @return SendingSmsOtpModel response from the API call
    def get_sending_sms_otp_custom_otp api_key, otp, phone_number
      # the base uri for api requests
      query_builder = Configuration.BASE_URI.dup

      # prepare query string for API call
      query_builder << "/API/V1/{api_key}/SMS/{phone_number}/{otp}"

      # process optional query parameters
      query_builder = APIHelper.append_url_with_template_parameters query_builder, {
        "api_key" => api_key,
        "otp" => otp,
        "phone_number" => phone_number,
      }

      # validate and preprocess url
      query_url = APIHelper.clean_url query_builder

      # prepare headers
      headers = {
        "user-agent" => "2Factor",
        "accept" => "application/json"
      }

      # invoke the API call request to fetch the response
      response = Unirest.get query_url, headers:headers

      #Error handling using HTTP status codes
      if !(response.code.between?(200,206)) # [200,206] = HTTP OK
        raise APIException.new "HTTP Response Not OK", response.code, response.raw_body
      end

      response.body
    end

    # This endpoint is useful in verifying user entered OTP with sent OTP
    # @param [String] api_key Required parameter: API Obtained From 2Factor.in
    # @param [String] otp_input Required parameter: OTP Value input by end user
    # @param [String] session_id Required parameter: Verification session id returned in send OTP step
    # @return VerifyOtpInputModel response from the API call
    def get_verify_sms_otp_input api_key, otp_input, session_id
      # the base uri for api requests
      query_builder = Configuration.BASE_URI.dup

      # prepare query string for API call
      query_builder << "/API/V1/{api_key}/SMS/VERIFY/{session_id}/{otp_input}"

      # process optional query parameters
      query_builder = APIHelper.append_url_with_template_parameters query_builder, {
        "api_key" => api_key,
        "otp_input" => otp_input,
        "session_id" => session_id,
      }

      # validate and preprocess url
      query_url = APIHelper.clean_url query_builder

      # prepare headers
      headers = {
        "user-agent" => "2Factor",
        "accept" => "application/json"
      }

      # invoke the API call request to fetch the response
      response = Unirest.get query_url, headers:headers

      #Error handling using HTTP status codes
      if !(response.code.between?(200,206)) # [200,206] = HTTP OK
        raise APIException.new "HTTP Response Not OK", response.code, response.raw_body
      end

      response.body
    end

  end
end